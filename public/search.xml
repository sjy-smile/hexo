<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++队列的链式存储代码实现</title>
      <link href="/posts/32dfacd1.html"/>
      <url>/posts/32dfacd1.html</url>
      
        <content type="html"><![CDATA[<p>队列的链式存储代码实现</p><p>队列初始化、判断是否为空、入队尾插法、出队头部删除</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">LinkNode</span> &#123;</span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">LinkNode</span>* next;</span><br><span class="line">&#125; LinkNode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    LinkNode *front, *rear;</span><br><span class="line">&#125; LinkQueue; <span class="comment">// 先进先出</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 队列的初始化，使用的是带头节点的链表来实现的</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initQueue</span><span class="params">(LinkQueue &amp;Q)</span> </span>&#123;</span><br><span class="line">    Q.front = Q.rear = (LinkNode*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LinkNode));</span><br><span class="line">    Q.front-&gt;next = <span class="literal">NULL</span>; <span class="comment">// 头指针指向</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否为空 </span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isEmpty</span><span class="params">(LinkQueue Q)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (Q.front-&gt;next == <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 入队，尾插法</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">enQueue</span><span class="params">(LinkQueue &amp;Q, ElemType e)</span> </span>&#123;</span><br><span class="line">    LinkNode* p = (LinkNode*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LinkNode));</span><br><span class="line">    p-&gt;data = e;</span><br><span class="line">    p-&gt;next = <span class="literal">NULL</span>;   <span class="comment">// next指向NULL</span></span><br><span class="line">    Q.rear-&gt;next = p; <span class="comment">// 尾指针的 next指向p，因为要从尾部入队</span></span><br><span class="line">    Q.rear = p;       <span class="comment">// rear要指向新的尾部</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 出队,头部删除方法</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">deQueue</span><span class="params">(LinkQueue &amp;Q, ElemType &amp;e)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 判断队列为空</span></span><br><span class="line">    <span class="keyword">if</span> (Q.front == Q.rear) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkNode *p = Q.front-&gt;next;</span><br><span class="line">    e = p-&gt;data;</span><br><span class="line">    Q.front-&gt;next=p-&gt;next;<span class="comment">//断链</span></span><br><span class="line">    <span class="keyword">if</span>(Q.rear==p)&#123;<span class="comment">//删除的是最后一个元素</span></span><br><span class="line">        Q.rear=Q.front;<span class="comment">//队列置为空</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 头部删除，尾部入队</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    LinkQueue Q;</span><br><span class="line">    <span class="type">bool</span> ret;</span><br><span class="line">    <span class="comment">// 初始化队列</span></span><br><span class="line">    <span class="built_in">initQueue</span>(Q);</span><br><span class="line">    <span class="comment">// 判断队列是否为空</span></span><br><span class="line">    ret = <span class="built_in">isEmpty</span>(Q);</span><br><span class="line">    <span class="keyword">if</span>(ret)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;队列为空\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;队列不为空\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 入队，尾插法</span></span><br><span class="line">    <span class="built_in">enQueue</span>(Q, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">enQueue</span>(Q, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">enQueue</span>(Q, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">enQueue</span>(Q, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">enQueue</span>(Q, <span class="number">6</span>);</span><br><span class="line">    <span class="comment">// 出队</span></span><br><span class="line">    ElemType e;</span><br><span class="line">    ret = <span class="built_in">deQueue</span>(Q,e);</span><br><span class="line">    <span class="keyword">if</span> (ret) &#123;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;出队元素：%d\n&quot;</span>,e);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;出队失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 队列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>循环队列代码代码实现</title>
      <link href="/posts/e434efff.html"/>
      <url>/posts/e434efff.html</url>
      
        <content type="html"><![CDATA[<p>循环队列代码练习</p><p>初始化队列、判断队列是否为空、入队、出队</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 循环队列代码实战</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MaxSize 5</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    ElemType data[MaxSize]; <span class="comment">// 数组存储MaxSize-1 个元素</span></span><br><span class="line">    <span class="type">int</span> front, rear; <span class="comment">// 队列头，队列尾</span></span><br><span class="line">&#125; SqQueue;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化队列</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initQueue</span><span class="params">(SqQueue &amp;Q)</span> </span>&#123;</span><br><span class="line">    Q.front = Q.rear = <span class="number">0</span>; <span class="comment">// 初始化循环队列，就是让头和尾部都指向零号</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断队列是否为空</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isEmpty</span><span class="params">(SqQueue Q)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Q.front == Q.rear;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 入队操作</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">enQueue</span><span class="params">(SqQueue &amp;Q, ElemType e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((Q.rear + <span class="number">1</span>) % MaxSize == Q.front) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Q.data[Q.rear] = e; <span class="comment">// 放入元素</span></span><br><span class="line">    Q.rear = (Q.rear + <span class="number">1</span>) % MaxSize; <span class="comment">// rear 要加1，如果大于数组最大下标，回到开头</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 出队操作</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">deQueue</span><span class="params">(SqQueue &amp;Q, ElemType &amp;e)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 判断为空</span></span><br><span class="line">    <span class="keyword">if</span> (Q.front == Q.rear) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    e = Q.data[Q.front]; <span class="comment">//出队</span></span><br><span class="line">    Q.front = (Q.front + <span class="number">1</span>) % MaxSize;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqQueue Q;</span><br><span class="line">    <span class="built_in">initQueue</span>(Q);</span><br><span class="line">    <span class="type">bool</span> ret;</span><br><span class="line">    ret = <span class="built_in">isEmpty</span>(Q);</span><br><span class="line">    <span class="keyword">if</span> (ret) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;队列为空&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;队列不为空&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 入队</span></span><br><span class="line">    <span class="built_in">enQueue</span>(Q, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">enQueue</span>(Q, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">enQueue</span>(Q, <span class="number">5</span>);</span><br><span class="line">    ret = <span class="built_in">enQueue</span>(Q, <span class="number">6</span>);</span><br><span class="line">    ret = <span class="built_in">enQueue</span>(Q, <span class="number">7</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;入队成功\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;入队失败\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ElemType elem; <span class="comment">//存储出队元素</span></span><br><span class="line">    ret = <span class="built_in">deQueue</span>(Q, elem);</span><br><span class="line">    <span class="keyword">if</span> (ret) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;出队成功，出队元素：%d\n&quot;</span>, elem);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;出队失败\n&quot;</span>, elem);</span><br><span class="line">    &#125;</span><br><span class="line">    ret = <span class="built_in">enQueue</span>(Q, <span class="number">7</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;入队成功\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;入队失败\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 队列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++数据结构单链表代码</title>
      <link href="/posts/669576d7.html"/>
      <url>/posts/669576d7.html</url>
      
        <content type="html"><![CDATA[<p>C++数据结构单链表初始化、头插法、尾插法、按位置插入、按值查找、删除</p><p>知道并理解单链表连理，练习并掌握代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">LNode</span> &#123;</span><br><span class="line">    ElemType data; <span class="comment">//数据域</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">LNode</span> *next; <span class="comment">//指针域</span></span><br><span class="line">&#125; LNode, *LinkList;</span><br><span class="line"></span><br><span class="line"><span class="comment">// LNode* 是结构体指针，和LinkList完全等价 头插法</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">linkHeadInsert</span><span class="params">(LinkList &amp;L)</span> </span>&#123;</span><br><span class="line">    L = (LinkList) <span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode)); <span class="comment">// 申请头节点空间，头指针指向头节点</span></span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    ElemType x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    LNode *s;</span><br><span class="line">    <span class="keyword">while</span> (x != <span class="number">9999</span>) &#123;</span><br><span class="line">        s = (LinkList) <span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">        s-&gt;data = x;</span><br><span class="line">        s-&gt;next = L-&gt;next;</span><br><span class="line">        L-&gt;next = s;  <span class="comment">// 头节点的next,指向新节点；</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 尾插法</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">linkTailInsert</span><span class="params">(LinkList &amp;L)</span> </span>&#123;</span><br><span class="line">    L = (LinkList) <span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode)); <span class="comment">// 申请头节点空间，头指针指向头节点</span></span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    ElemType x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    LNode *s, *r = L;</span><br><span class="line">    <span class="keyword">while</span> (x != <span class="number">9999</span>) &#123;</span><br><span class="line">        s = (LinkList) <span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">        s-&gt;data = x;</span><br><span class="line">        r-&gt;next = s; <span class="comment">// 尾部节点指向新的节点</span></span><br><span class="line">        r = s;  <span class="comment">// 头节点的next,指向新节点；</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">    r-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按位置查找</span></span><br><span class="line"><span class="function">LinkList <span class="title">getElemIndex</span><span class="params">(LinkList L, <span class="type">int</span> pos)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pos &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (L &amp;&amp; i &lt; pos) &#123;</span><br><span class="line">        L = L-&gt;next;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按值查找</span></span><br><span class="line"><span class="function">LinkList <span class="title">getLocalElem</span><span class="params">(LinkList L, ElemType value)</span> </span>&#123;</span><br><span class="line">    L = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (L) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L-&gt;data == value) &#123;</span><br><span class="line">            <span class="keyword">return</span> L;</span><br><span class="line">        &#125;</span><br><span class="line">        L = L-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printList</span><span class="params">(LinkList L)</span> </span>&#123;</span><br><span class="line">    L = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (L != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>, L-&gt;data);</span><br><span class="line">        L = L-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新节点插入地i个位置</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">insertFrontList</span><span class="params">(LinkList &amp;L, <span class="type">int</span> pos, ElemType val)</span> </span>&#123;</span><br><span class="line">    LinkList p = <span class="built_in">getElemIndex</span>(L, pos - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == p) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkList s;</span><br><span class="line">    s = (LinkList) <span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">    s-&gt;data = val;</span><br><span class="line">    s-&gt;next = p-&gt;next;</span><br><span class="line">    p-&gt;next = s;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除id对应的元素，删除L 不会变，不需要加引用</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">deleteList</span><span class="params">(LinkList L, <span class="type">int</span> pos)</span> </span>&#123;</span><br><span class="line">    LinkList p = <span class="built_in">getElemIndex</span>(L, pos - <span class="number">1</span>); <span class="comment">// 拿到要删除节点的前一个节点</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == p) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkList q = p-&gt;next; <span class="comment">// 拿到要删除的节点指针</span></span><br><span class="line">    p-&gt;next = q-&gt;next; <span class="comment">// 断链</span></span><br><span class="line">    <span class="built_in">free</span>(q); <span class="comment">// 释放被删除的节点</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 头插法新建链表</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    LinkList L; <span class="comment">// L是链表头指针，是数据机构的指针类型</span></span><br><span class="line">    <span class="comment">// 头插法</span></span><br><span class="line"><span class="comment">//    linkHeadInsert(L); // 输入数据可以为3 4 5 6 7 9999,都插法新建链表</span></span><br><span class="line"><span class="comment">//    printList(L);</span></span><br><span class="line">    <span class="comment">// 尾插法</span></span><br><span class="line">    <span class="built_in">linkHeadInsert</span>(L);</span><br><span class="line">    <span class="built_in">printList</span>(L);</span><br><span class="line">    <span class="comment">// 按位置查找</span></span><br><span class="line"><span class="comment">//    LinkList linkList = getElemIndex(L, 1);</span></span><br><span class="line"><span class="comment">//    if (linkList != NULL) &#123;</span></span><br><span class="line"><span class="comment">//        printf(&quot;data=%d\n&quot;, linkList-&gt;data);</span></span><br><span class="line"><span class="comment">//    &#125; else &#123;</span></span><br><span class="line"><span class="comment">//        printf(&quot;no match&quot;);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="comment">// 按位置查找</span></span><br><span class="line"><span class="comment">//    LinkList searchValue = getLocalElem(L, 5);</span></span><br><span class="line"><span class="comment">//    if (searchValue != NULL) &#123;</span></span><br><span class="line"><span class="comment">//        printf(&quot;data=%d\n&quot;, searchValue-&gt;data);</span></span><br><span class="line"><span class="comment">//    &#125; else &#123;</span></span><br><span class="line"><span class="comment">//        printf(&quot;no match&quot;);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="comment">// 新节点插入地i个位置</span></span><br><span class="line">    <span class="built_in">insertFrontList</span>(L, <span class="number">3</span>, <span class="number">99</span>);</span><br><span class="line">    <span class="built_in">printList</span>(L);</span><br><span class="line">    <span class="comment">// 删除元素</span></span><br><span class="line">    <span class="type">bool</span> ret = <span class="built_in">deleteList</span>(L, <span class="number">6</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;failer&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printList</span>(L);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单链表 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++数据结构顺序表代码</title>
      <link href="/posts/2f15bdd3.html"/>
      <url>/posts/2f15bdd3.html</url>
      
        <content type="html"><![CDATA[<p>C++数据结构顺序表代码练习</p><p>插入、删除、查找</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">char</span>*&amp; p)</span> </span>&#123;</span><br><span class="line">    p = (<span class="type">char</span>*)<span class="built_in">malloc</span>(<span class="number">100</span>);</span><br><span class="line">    <span class="built_in">fgets</span>(p, <span class="number">100</span>, stdin);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MaxSize 50</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType; <span class="comment">// 让顺序表存储其他类型元素时，可以快速修改代码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    ElemType data[MaxSize];</span><br><span class="line">    <span class="type">int</span> length; <span class="comment">// 顺序表长度</span></span><br><span class="line">&#125; SqlList;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">insertList</span><span class="params">(SqlList&amp; L, <span class="type">int</span> i, ElemType e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; L.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = L.length; j &gt;= i; j--) &#123;</span><br><span class="line">        L.data[j] = L.data[j - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    L.data[i - <span class="number">1</span>] = e;</span><br><span class="line">    L.length++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">deleteList</span><span class="params">(SqlList&amp; L, <span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; L.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; L.length; j++) &#123;</span><br><span class="line">        L.data[j<span class="number">-1</span>] = L.data[j];</span><br><span class="line">    &#125;</span><br><span class="line">    L.length--;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printlist</span><span class="params">(SqlList L)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>, L.data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// char *p;</span></span><br><span class="line">    <span class="comment">// scanf(&quot;%s&quot;,p);</span></span><br><span class="line">    <span class="comment">// change(p);</span></span><br><span class="line">    <span class="comment">// puts(p);</span></span><br><span class="line">    <span class="comment">// free(p);</span></span><br><span class="line">    SqlList L;</span><br><span class="line">    L.data[<span class="number">0</span>] = <span class="number">6</span>;</span><br><span class="line">    L.data[<span class="number">1</span>] = <span class="number">7</span>;</span><br><span class="line">    L.data[<span class="number">2</span>] = <span class="number">8</span>;</span><br><span class="line">    L.length = <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">    <span class="comment">// printlist(L);</span></span><br><span class="line">    <span class="type">bool</span> ret = <span class="built_in">insertList</span>(L, <span class="number">2</span>, a);</span><br><span class="line">    <span class="keyword">if</span> (ret) &#123;</span><br><span class="line">        <span class="built_in">printlist</span>(L);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 删除</span></span><br><span class="line">    <span class="type">int</span> d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;d);</span><br><span class="line">    <span class="type">bool</span> dd = <span class="built_in">deleteList</span>(L,d);</span><br><span class="line">    <span class="keyword">if</span>(dd)&#123;</span><br><span class="line">        <span class="built_in">printlist</span>(L);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;false\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 顺序表 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组实现栈的初始化入栈出栈操作</title>
      <link href="/posts/ba62eb1b.html"/>
      <url>/posts/ba62eb1b.html</url>
      
        <content type="html"><![CDATA[<p>数组实现栈的操作</p><p>栈的初始化、入栈、出栈</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 栈的初始化、入栈、出栈</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MaxSize 50</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    ElemType data[MaxSize];</span><br><span class="line">    <span class="type">int</span> top;</span><br><span class="line">&#125; SqStack;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化队列</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initStack</span><span class="params">(SqStack &amp;S)</span> </span>&#123;</span><br><span class="line">    S.top = <span class="number">-1</span>; <span class="comment">// 代表栈为空</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否为空</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isEmptyStack</span><span class="params">(SqStack S)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">-1</span> == S.top) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 入队</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">enStack</span><span class="params">(SqStack &amp;S, ElemType e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (S.top == MaxSize - <span class="number">1</span>) &#123; <span class="comment">// 栈为空</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    S.data[++S.top] = e;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 弹出栈顶元素</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">pop</span><span class="params">(SqStack &amp;S, ElemType &amp;e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">-1</span> == S.top) &#123; <span class="comment">// 栈为空</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    S.data[S.top--] = e;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取栈顶元素</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">getTop</span><span class="params">(SqStack &amp;S, ElemType &amp;e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">-1</span> == S.top) &#123; <span class="comment">// 栈为空</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    e = S.data[S.top];</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqStack S;</span><br><span class="line">    <span class="type">bool</span> flag;</span><br><span class="line">    <span class="built_in">initStack</span>(S);</span><br><span class="line">    flag = <span class="built_in">isEmptyStack</span>(S);</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;栈为空\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 入栈</span></span><br><span class="line">    <span class="built_in">enStack</span>(S,<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">enStack</span>(S,<span class="number">3</span>);</span><br><span class="line">    <span class="built_in">enStack</span>(S,<span class="number">4</span>);</span><br><span class="line">    <span class="comment">// 获取栈顶元素</span></span><br><span class="line">    ElemType  e; <span class="comment">//用于存放获取栈顶的元素</span></span><br><span class="line">    flag = <span class="built_in">getTop</span>(S,e);</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;栈顶元素是：%d\n&quot;</span>,e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 出栈</span></span><br><span class="line">    flag = <span class="built_in">pop</span>(S,e);</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;弹出栈顶元素是：%d\n&quot;</span>,e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 队列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<h3 id="MySql使用rpm的方式安装"><a href="#MySql使用rpm的方式安装" class="headerlink" title="MySql使用rpm的方式安装"></a>MySql使用rpm的方式安装</h3><p>官方下载地址：<a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></p><p>1、安装 MySQL 官方的 yum repository</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mysql</title>
      <link href="/posts/9520183a.html"/>
      <url>/posts/9520183a.html</url>
      
        <content type="html"><![CDATA[<h3 id="MySql使用rpm的方式安装"><a href="#MySql使用rpm的方式安装" class="headerlink" title="MySql使用rpm的方式安装"></a>MySql使用rpm的方式安装</h3><p>官方下载地址：<a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></p><p>1、安装 MySQL 官方的 yum repository</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line"> <span class="comment">#　或者可以更改自家下载后的文件名，命名为,mysql.rpm</span></span><br><span class="line">wget -O mysql.rpm http://repo.mysql.com//mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><p>说明：<code>CentOS 7</code>的<code>yum</code>源中默认是没有<code>mysql</code>的。所以，为了解决这个问题我们首先下载安装<code>mysql</code>的<code>repository</code>源</p><p>2、下载 rpm 包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;注意&#x3D;&#x3D;：添加mysql-server rpm包（当前版本是 MySQL5.7）</p><p><code>rpm -ivh https://repo.mysql.com//mysql57-community-release-el7-11.noarch.rpm</code></p><p>3、安装 MySQL 服务 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 MySql 服务方式一：</span></span><br><span class="line">yum -y install mysql-community-server</span><br><span class="line"><span class="comment"># 安装 MySql 服务方式二(共3步)：</span></span><br><span class="line"><span class="comment"># 1、安装 mysql-server</span></span><br><span class="line">yum install mysql-server</span><br><span class="line"><span class="comment"># 2、安装 mysql-devel</span></span><br><span class="line">yum install mysql-devel</span><br><span class="line"><span class="comment"># 3、安装 mysql</span></span><br><span class="line">yum install mysql</span><br><span class="line"><span class="comment"># 1、2、3步安装的过程选择的步骤都选y</span></span><br><span class="line"><span class="comment"># 查看 MySQL 安装的软件</span></span><br><span class="line">rpm -qa|grep -i mysql</span><br></pre></td></tr></table></figure><p>4、启动MySQL服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动服务 </span></span><br><span class="line">systemctl start mysqld.service  或者  service mysqld start</span><br><span class="line"><span class="comment"># 停止服务</span></span><br><span class="line">systemctl stop mysqld.service  或者 service mysqld stop</span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">systemctl status mysqld.service  或者  service mysqld status</span><br><span class="line"><span class="comment">#　重启服务</span></span><br><span class="line">systemctl restart mysqld.service  或者 service mysqld restart</span><br><span class="line"><span class="comment"># 查看 mysql 启动的 pid</span></span><br><span class="line">pidof mysqld</span><br></pre></td></tr></table></figure><p>5、设置 MySql 开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> mysqld</span><br><span class="line"><span class="comment"># 刷新配置</span></span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>6、关于登录 MySql，登录命令（&#x3D;&#x3D;第一种方式使用密码登录&#x3D;&#x3D;）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p </span><br></pre></td></tr></table></figure><p>第一次启动MySQL后，就会有临时密码，这个默认的初始密码在&#x2F;var&#x2F;log&#x2F;mysqld.log文件中，我们可以用以下命令来查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看密码</span></span><br><span class="line">[root@izuf61151k3ad2dso6mo9oz mysql]<span class="comment"># grep &quot;password&quot; /var/log/mysqld.log</span></span><br><span class="line">2021-04-21T14:41:47.850679Z 1 [Note] A temporary password is generated <span class="keyword">for</span> root@localhost: Tt;vkIhrd71?</span><br><span class="line">2021-04-21T14:44:16.590080Z 2 [Note] Access denied <span class="keyword">for</span> user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> (using password: YES)</span><br><span class="line">2021-04-21T14:44:30.478638Z 3 [Note] Access denied <span class="keyword">for</span> user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> (using password: YES)</span><br><span class="line"><span class="comment"># 进入 mysql 修改 root 用户的密码</span></span><br><span class="line">update mysql.user <span class="built_in">set</span> authentication_string=password(<span class="string">&#x27;shijinying123!@#&#x27;</span>) <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="comment"># 修改之后刷新</span></span><br><span class="line">flush privileges;</span><br><span class="line"><span class="comment"># 输入命令会报错误，或者先执行刷新语句，在执行修改密码语句</span></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</span><br><span class="line"><span class="comment"># 出现这种情况一次执行一下命令</span></span><br><span class="line">SET PASSWORD = PASSWORD(<span class="string">&#x27;Shijinying123!@#&#x27;</span>);</span><br><span class="line">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> PASSWORD EXPIRE NEVER;</span><br><span class="line">flush privileges;</span><br><span class="line"><span class="comment"># 这里需要说明一下：密码必须包含数字，字母包含大小写，标点符号。不然是不能通过的。</span></span><br><span class="line"><span class="comment"># 完成之后就可以使用新密码登录了</span></span><br><span class="line">mysql -u root -p Shijinying123!@<span class="comment">#</span></span><br><span class="line"><span class="comment"># 修改 root 用户远程 连接</span></span><br><span class="line">update user <span class="built_in">set</span> host = <span class="string">&#x27;%&#x27;</span> <span class="built_in">where</span> user =<span class="string">&#x27;root&#x27;</span>;  <span class="comment">#　直接修改 root 用户</span></span><br><span class="line"><span class="comment"># 修改完刷新数据库</span></span><br><span class="line">flush privileges;</span><br><span class="line"><span class="comment"># 新增一条</span></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;Shijinying123!@#&#x27;</span> WITH GRANT OPTION;</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;配置文件说明：&#x3D;&#x3D;</p><blockquote><p>&#x2F;etc&#x2F;my.cnf 这是mysql的主配置文件<br>&#x2F;var&#x2F;lib&#x2F;mysql mysql数据库的数据库文件存放位置<br>&#x2F;var&#x2F;log mysql数据库的日志输出存放位置</p></blockquote><p>一下常用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查 MySQL 是否已经安装</span></span><br><span class="line">yum list installed | grep mysql</span><br><span class="line"><span class="comment"># 已经安装的使用 yum 方式卸载</span></span><br><span class="line">yum -y remove mysql-libs.x86_64   删除和MySQL有关的所有依赖  yum -y remove mysql*</span><br><span class="line"><span class="comment"># 验证下是否成功添加到了你的系统 repository 列表中</span></span><br><span class="line">yum repolist enabled | grep <span class="string">&quot;mysql.*-community.*&quot;</span> </span><br><span class="line"><span class="comment"># 查看 MySQL 版本</span></span><br><span class="line">yum repolist all | grep mysql</span><br><span class="line"><span class="comment"># 查看当前的启动的 MySQL 版本</span></span><br><span class="line">yum repolist enabled | grep mysql</span><br><span class="line"><span class="comment"># 查看 MySQL 的安装目录</span></span><br><span class="line">whereis mysql</span><br><span class="line"><span class="comment"># 查看 mysql 启动的 pid</span></span><br><span class="line">pidof mysqld</span><br><span class="line"><span class="comment"># 查看 MySQL 3306 端口是否启动成功</span></span><br><span class="line">netstat -nap |grep 3306</span><br></pre></td></tr></table></figure><h3 id="MySql使用Docker的方式安装"><a href="#MySql使用Docker的方式安装" class="headerlink" title="MySql使用Docker的方式安装"></a>MySql使用Docker的方式安装</h3><p>1、拉去镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br></pre></td></tr></table></figure><p>2、启动 mysql镜像</p><p>说明：-d 后台启动，-i 即使没有连接，也要保持标准输入保持打开状态，一般与 -t 连用，-t 分配一个伪tty，一般与 -i 连用.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name mysql-test \</span><br><span class="line">-v /data/mysql/mysql-data/:/var/lib/mysql \</span><br><span class="line">-v /data/mysql/conf/my.cnf:/etc/mysql/my.cnf \</span><br><span class="line">--privileged=<span class="literal">true</span> -e MYSQL_ROOT_PASSWORD=test123456 \</span><br><span class="line">-p 3306:3306 --restart=always mysql:5.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改命令</span></span><br><span class="line">docker update </span><br></pre></td></tr></table></figure><p>my.cnf 配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This program is free software; you can redistribute it and/or modify</span></span><br><span class="line"><span class="comment"># it under the terms of the GNU General Public License as published by</span></span><br><span class="line"><span class="comment"># the Free Software Foundation; version 2 of the License.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This program is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment"># but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment"># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></span><br><span class="line"><span class="comment"># GNU General Public License for more details.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You should have received a copy of the GNU General Public License</span></span><br><span class="line"><span class="comment"># along with this program; if not, write to the Free Software</span></span><br><span class="line"><span class="comment"># Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA</span></span><br><span class="line"></span><br><span class="line">!includedir /etc/mysql/conf.d/</span><br><span class="line">!includedir /etc/mysql/mysql.conf.d/</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default_character_set=utf8</span><br><span class="line">[client]</span><br><span class="line">default_character_set=utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">max_connections = 3000</span><br><span class="line">max_user_connections = 3000</span><br><span class="line">max_connect_errors = 100000</span><br><span class="line">max_allowed_packet = 1G</span><br><span class="line">character_set_server=utf8</span><br><span class="line">collation-server=utf8_general_ci</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br><span class="line"></span><br><span class="line"><span class="comment"># bin-log</span></span><br><span class="line">expire_logs_days = 15</span><br><span class="line">binlog_format=mixed</span><br><span class="line">server-id=168168</span><br><span class="line"></span><br><span class="line"><span class="comment">##########################</span></span><br><span class="line"><span class="comment">## log slow</span></span><br><span class="line"><span class="comment">###########################</span></span><br><span class="line">slow_query_log=off</span><br><span class="line">slow_query_log_file=/var/log/mysql/mysqld_slow.log</span><br><span class="line">long_query_time=1</span><br><span class="line">log_queries_not_using_indexes=on</span><br><span class="line"></span><br><span class="line"><span class="comment">##########################</span></span><br><span class="line"><span class="comment">## innodb</span></span><br><span class="line"><span class="comment">###########################</span></span><br><span class="line">innodb_file_per_table=1</span><br><span class="line">innodb_log_file_size=1024M</span><br><span class="line">innodb_log_buffer_size=64M </span><br><span class="line"></span><br><span class="line">table_open_cache = 8000</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
